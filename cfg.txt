S -> IF_METHOD
S -> LET_METHOD
S -> CONST_METHOD
S -> WHILE_METHOD
S -> FOR_METHOD
S -> FUNCTION_METHOD
S -> FINALLY_METHOD
S -> SWITCH_METHOD
S -> CASE_METHOD
S -> VAR_METHOD
S -> TRY_METHOD
S -> THROW_METHOD
S -> ENTER S
S -> S ENTER
S -> ENTER
S -> FINALLY_METHOD

TRUE -> true 
FALSE -> false
NUMBERS -> numbers
FUNCTION -> function
STRING -> string
EQUAL -> equal
ISEQ -> iseq
LB -> lb
RB -> rb
SWITCH -> switch
CASE -> case
COLON -> colon
SEMICOLON -> semicolon
LE -> le
L -> l
MOD -> mod
GE -> ge
G -> g
NEQ -> neq
SUBTREQ -> subtreq
MULEQ -> muleq
SUMEQ -> sumeq
DIVEQ -> diveq
INCREMENT -> increment 
DECREMMENT -> decrement
AND -> and 
OR -> or
NOT -> not
IF -> if
ELSE -> else
WHILE -> while
FOR -> for
LET -> let
CONST -> const
PAREN_OPEN -> lp
PAREN_CLOSE -> rp
BRACKET_OPEN -> lsb
BRACKET_CLOSE -> rsb
CURLY_BRACKET_OPEN -> lcb
CURLY_BRACKET_CLOSE -> rcb 
NEWLINE -> newline
RETURN -> return
VAR -> var
COMMA -> comma
ADD -> add 
SUBTR -> subtr 
MUL -> mul 
DIV -> div 
BREAK -> break 

EVALUATION -> ISEQ
EVALUATION -> LE
EVALUATION -> L
EVALUATION -> GE 
EVALUATION -> G
EVALUATION -> NEQ
ASSIGNMENT -> EQUAL
OPERATION -> MOD
OPERATION -> SUBTREQ
OPERATION -> MULEQ
OPERATION -> DIVEQ
OPERATION -> SUMEQ
OPERATION -> ADD
OPERATION -> SUBTR
OPERATION -> DIV
OPERATION -> MUL
SINGLE_OPERATION -> INCREMENT
SINGLE_OPERATION -> DECREMMENT
LOGICAL -> OR
LOGICAL -> NOT
LOGICAL -> AND

LET_METHOD -> LET VAR ASSIGNMENT EXPRESSION
LET_METHOD -> LET VAR ASSIGNMENT EXPRESSION SEMICOLON
CONST_METHOD -> CONST VAR ASSIGNMENT EXPRESSION
VAR_METHOD -> VAR VAR ASSIGNMENT EXPRESSION

ENTER -> NEWLINE ENTER
ENTER -> NEWLINE


TRY_METHOD -> TRY IN_CURLY_BRACKET
CATCH_METHOD -> IN_PAREN IN_CURLY_BRACKET
FINALLY_METHOD -> FINALLY IN_CURLY_BRACKET


EXPRESSION -> NUMBERS
EXPRESSION -> STRING
EXPRESSION -> VAR
EXPRESSION -> EXPRESSION SINGLE_OPERATION
EXPRESSION -> EXPRESSION COMMA EXPRESSION
EXPRESSION -> EXPRESSION ASSIGNMENT EXPRESSION
EXPRESSION -> EXPRESSION OPERATION EXPRESSION
EXPRESSION -> EXPRESSION LOGICAL EXPRESSION
EXPRESSION -> EXPRESSION EVALUATION EXPRESSION
EXPRESSION -> IN_PAREN
EXPRESSION -> IN_BRACKET
EXPRESSION -> IN_CURLY_BRACKET
EXPRESSION -> EXPRESSION ENTER EXPRESSION
EXPRESSION -> EXPRESSION ENTER
EXPRESSION -> FUNCTION_METHOD
EXPRESSION -> RETURN_METHOD
EXPRESSION -> TRY_METHOD
EXPRESSION -> CATCH_METHOD
EXPRESSION -> FINALLY_METHOD
EXPRESSION -> LET_METHOD
EXPRESSION -> IF_METHOD
EXPRESSION -> CONST_METHOD
EXPRESSION -> ENTER EXPRESSION ENTER
EXPRESSION -> TRUE
EXPRESSION -> FALSE
EXPRESSION -> EXPRESSION SEMICOLON
EXPRESSION -> FOR_METHOD
EXPRESSION -> WHILE_METHOD
EXPRESSION -> BREAK

EXPRESSION -> LET_METHOD EXPRESSION SEMOCOLON
FUNCTION_METHOD -> FUNCTION VAR IN_PAREN IN_CURLY_BRACKET
RETURN_METHOD -> RETURN EXPRESSION


IN_PAREN -> PAREN_OPEN EXPRESSION PAREN_CLOSE
IN_BRACKET -> BRACKET_OPEN EXPRESSION BRACKET_CLOSE
IN_CURLY_BRACKET -> CURLY_BRACKET_OPEN EXPRESSION CURLY_BRACKET_CLOSE


SWITCH_METHOD -> SWITCH IN_PAREN IN_CURLY_BRACKET
CASE_METHOD -> CASE NUMBERS COLON ENTER EXPRESSION ENTER
EXPRESSION -> CASE_METHOD


IF_METHOD -> IF IN_PAREN IN_CURLY_BRACKET 
IF_METHOD -> IF IN_PAREN IN_CURLY_BRACKET ELSE_METHOD
IF_METHOD -> IF IN_PAREN IN_CURLY_BRACKET ELSE_IF_METHOD
ELSE_IF_METHOD -> ELSE IF_METHOD 
ELSE_METHOD -> ELSE IN_CURLY_BRACKET

WHILE_METHOD -> WHILE IN_PAREN IN_CURLY_BRACKET
FOR_METHOD -> FOR IN_PAREN_FOR IN_CURLY_BRACKET

IN_PAREN_FOR -> PAREN_OPEN EXPRESSION SEMICOLON EXPRESSION SEMICOLON EXPRESSION PAREN_CLOSE